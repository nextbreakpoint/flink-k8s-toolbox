plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.20'
}

group = 'com.nextbreakpoint'
version = '1.4.0-beta'
description = 'Tool for managing Flink clusters on Kubernetes'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenLocal()
    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }
}

dependencies {
    constraints {
        implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.4.20'
        implementation 'org.jetbrains.kotlin:kotlin-reflect:1.4.20'
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9'
        implementation 'io.kubernetes:client-java:10.0.0'
        implementation 'com.google.code.gson:gson:2.8.6'
        implementation 'org.slf4j:slf4j-simple:1.7.30'
        implementation 'io.vertx:vertx-core:4.0.0'
        implementation 'io.vertx:vertx-rx-java:4.0.0'
        implementation 'io.vertx:vertx-web:4.0.0'
        implementation 'io.vertx:vertx-web-common:4.0.0'
        implementation 'io.vertx:vertx-web-client:4.0.0'
        implementation 'io.vertx:vertx-micrometer-metrics:4.0.0'
        implementation 'com.github.ajalt:clikt:2.8.0'
        implementation 'javax.xml.bind:jaxb-api:2.3.1'
        implementation 'javax.activation:activation:1.1.1'
        implementation 'io.micrometer:micrometer-registry-prometheus:1.5.4'
        implementation 'com.fasterxml.jackson.core:jackson-core:2.11.3'
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.3'
        implementation 'com.fasterxml.jackson.core:jackson-annotations:2.11.3'
        implementation 'com.nextbreakpoint:com.nextbreakpoint.flinkclient:1.0.3'

        testImplementation 'org.jetbrains.kotlin:kotlin-test-junit:1.4.20'
        testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
        testImplementation 'org.junit.platform:junit-platform-runner:1.7.0'
        testImplementation 'org.assertj:assertj-core:3.17.2'
        testImplementation 'org.mockito:mockito-core:3.5.10'
        testImplementation 'com.github.tomakehurst:wiremock-jre8:2.27.2'
        testImplementation 'org.awaitility:awaitility:4.0.3'
        testImplementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.11.3'
    }
}

dependencies {
    implementation project('crd')

    implementation 'org.jetbrains.kotlin:kotlin-stdlib'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core'
    implementation 'io.kubernetes:client-java'
    implementation 'com.google.code.gson:gson'
    implementation 'org.slf4j:slf4j-simple'
    implementation 'io.vertx:vertx-core'
    implementation 'io.vertx:vertx-rx-java'
    implementation 'io.vertx:vertx-web'
    implementation 'io.vertx:vertx-web-common'
    implementation 'io.vertx:vertx-web-client'
    implementation 'io.vertx:vertx-micrometer-metrics'
    implementation 'com.github.ajalt:clikt'
    implementation 'javax.xml.bind:jaxb-api'
    implementation 'javax.activation:activation'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.core:jackson-annotations'
    implementation 'com.nextbreakpoint:com.nextbreakpoint.flinkclient'

    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.junit.platform:junit-platform-runner'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'com.github.tomakehurst:wiremock-jre8'
    testImplementation 'org.awaitility:awaitility'
    testImplementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    main.java.srcDirs += 'src/main/java'
}

compileJava {
    options.release = 11
}

compileKotlin {
    kotlinOptions.suppressWarnings = true
    kotlinOptions.jvmTarget = '11'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform() {
        excludeTags 'IntegrationTest'
    }
}

task integrationTest(type: Test) {
    useJUnitPlatform {
        includeTags 'IntegrationTest'
    }
    shouldRunAfter test
}

task copyRuntimeDeps(type: Copy) {
    into "$buildDir/libs"
    from configurations.runtimeClasspath
}

jar {
    manifest {
        attributes 'Main-Class': 'com.nextbreakpoint.flink.cli.Main', \
                   'Implementation-Title': 'flinkctl', \
                   'Implementation-Version': project.version, \
                   'Built-By': System.getProperty('user.name'), \
                   'Built-JDK': System.getProperty('java.version'), \
                   'Build-Time': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    }
}

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    from (sourceSets.main.resources) {
        include '*.properties'
        filter(ReplaceTokens, tokens: ['name': project.name, 'version': project.version])
    }
}
