---
description: "A single application container that you want to run within a pod."
properties:
  args:
    description: "Arguments to the entrypoint. The docker image's CMD is used if this\
      \ is not provided. Variable references $(VAR_NAME) are expanded using the container's\
      \ environment. If a variable cannot be resolved, the reference in the input\
      \ string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double\
      \ $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless\
      \ of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
    items:
      type: "string"
    type: "array"
  command:
    description: "Entrypoint array. Not executed within a shell. The docker image's\
      \ ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME)\
      \ are expanded using the container's environment. If a variable cannot be resolved,\
      \ the reference in the input string will be unchanged. The $(VAR_NAME) syntax\
      \ can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will\
      \ never be expanded, regardless of whether the variable exists or not. Cannot\
      \ be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
    items:
      type: "string"
    type: "array"
  env:
    description: "List of environment variables to set in the container. Cannot be\
      \ updated."
    items:
      description: "EnvVar represents an environment variable present in a Container."
      properties:
        name:
          description: "Name of the environment variable. Must be a C_IDENTIFIER."
          type: "string"
        value:
          description: "Variable references $(VAR_NAME) are expanded using the previous\
            \ defined environment variables in the container and any service environment\
            \ variables. If a variable cannot be resolved, the reference in the input\
            \ string will be unchanged. The $(VAR_NAME) syntax can be escaped with\
            \ a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,\
            \ regardless of whether the variable exists or not. Defaults to \"\"."
          type: "string"
        valueFrom:
          description: "EnvVarSource represents a source for the value of an EnvVar."
          properties:
            configMapKeyRef:
              description: "Selects a key from a ConfigMap."
              properties:
                key:
                  description: "The key to select."
                  type: "string"
                name:
                  description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                  type: "string"
                optional:
                  description: "Specify whether the ConfigMap or its key must be defined"
                  type: "boolean"
              required:
              - "key"
              type: "object"
            fieldRef:
              description: "ObjectFieldSelector selects an APIVersioned field of an\
                \ object."
              properties:
                apiVersion:
                  description: "Version of the schema the FieldPath is written in\
                    \ terms of, defaults to \"v1\"."
                  type: "string"
                fieldPath:
                  description: "Path of the field to select in the specified API version."
                  type: "string"
              required:
              - "fieldPath"
              type: "object"
            resourceFieldRef:
              description: "ResourceFieldSelector represents container resources (cpu,\
                \ memory) and their output format"
              properties:
                containerName:
                  description: "Container name: required for volumes, optional for\
                    \ env vars"
                  type: "string"
                divisor:
                  description: "Quantity is a fixed-point representation of a number.\
                    \ It provides convenient marshaling/unmarshaling in JSON and YAML,\
                    \ in addition to String() and AsInt64() accessors.\n\nThe serialization\
                    \ format is:\n\n<quantity>        ::= <signedNumber><suffix>\n\
                    \  (Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n\
                    <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit>\
                    \ | <digit><digits> <number>          ::= <digits> | <digits>.<digits>\
                    \ | <digits>. | .<digits> <sign>            ::= \"+\" | \"-\"\
                    \ <signedNumber>    ::= <number> | <sign><number> <suffix>   \
                    \       ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>\
                    \        ::= Ki | Mi | Gi | Ti | Pi | Ei\n  (International System\
                    \ of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\
                    <decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n  (Note\
                    \ that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n\
                    <decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>\n\
                    \nNo matter which of the three exponent forms is used, no quantity\
                    \ may represent a number greater than 2^63-1 in magnitude, nor\
                    \ may it have more than 3 decimal places. Numbers larger or more\
                    \ precise will be capped or rounded up. (E.g.: 0.1m will rounded\
                    \ up to 1m.) This may be extended in the future if we require\
                    \ larger or smaller quantities.\n\nWhen a Quantity is parsed from\
                    \ a string, it will remember the type of suffix it had, and will\
                    \ use the same type again when it is serialized.\n\nBefore serializing,\
                    \ Quantity will be put in \"canonical form\". This means that\
                    \ Exponent/suffix will be adjusted up or down (with a corresponding\
                    \ increase or decrease in Mantissa) such that:\n  a. No precision\
                    \ is lost\n  b. No fractional digits will be emitted\n  c. The\
                    \ exponent (or suffix) is as large as possible.\nThe sign will\
                    \ be omitted unless the number is negative.\n\nExamples:\n  1.5\
                    \ will be serialized as \"1500m\"\n  1.5Gi will be serialized\
                    \ as \"1536Mi\"\n\nNote that the quantity will NEVER be internally\
                    \ represented by a floating point number. That is the whole point\
                    \ of this exercise.\n\nNon-canonical values will still parse as\
                    \ long as they are well formed, but will be re-emitted in their\
                    \ canonical form. (So always use canonical form, or don't diff.)\n\
                    \nThis format is intended to make it difficult to use these numbers\
                    \ without writing some sort of special handling code in the hopes\
                    \ that that will cause implementors to also use a fixed point\
                    \ implementation."
                  type: "string"
                  properties: {}
                resource:
                  description: "Required: resource to select"
                  type: "string"
              required:
              - "resource"
              type: "object"
            secretKeyRef:
              description: "SecretKeySelector selects a key of a Secret."
              properties:
                key:
                  description: "The key of the secret to select from.  Must be a valid\
                    \ secret key."
                  type: "string"
                name:
                  description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                  type: "string"
                optional:
                  description: "Specify whether the Secret or its key must be defined"
                  type: "boolean"
              required:
              - "key"
              type: "object"
          type: "object"
      required:
      - "name"
      type: "object"
    type: "array"
    x-kubernetes-patch-merge-key: "name"
    x-kubernetes-patch-strategy: "merge"
  envFrom:
    description: "List of sources to populate environment variables in the container.\
      \ The keys defined within a source must be a C_IDENTIFIER. All invalid keys\
      \ will be reported as an event when the container is starting. When a key exists\
      \ in multiple sources, the value associated with the last source will take precedence.\
      \ Values defined by an Env with a duplicate key will take precedence. Cannot\
      \ be updated."
    items:
      description: "EnvFromSource represents the source of a set of ConfigMaps"
      properties:
        configMapRef:
          description: "ConfigMapEnvSource selects a ConfigMap to populate the environment\
            \ variables with.\n\nThe contents of the target ConfigMap's Data field\
            \ will represent the key-value pairs as environment variables."
          properties:
            name:
              description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
              type: "string"
            optional:
              description: "Specify whether the ConfigMap must be defined"
              type: "boolean"
          type: "object"
        prefix:
          description: "An optional identifier to prepend to each key in the ConfigMap.\
            \ Must be a C_IDENTIFIER."
          type: "string"
        secretRef:
          description: "SecretEnvSource selects a Secret to populate the environment\
            \ variables with.\n\nThe contents of the target Secret's Data field will\
            \ represent the key-value pairs as environment variables."
          properties:
            name:
              description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
              type: "string"
            optional:
              description: "Specify whether the Secret must be defined"
              type: "boolean"
          type: "object"
      type: "object"
    type: "array"
  image:
    description: "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images\
      \ This field is optional to allow higher level config management to default\
      \ or override container images in workload controllers like Deployments and\
      \ StatefulSets."
    type: "string"
  imagePullPolicy:
    description: "Image pull policy. One of Always, Never, IfNotPresent. Defaults\
      \ to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be\
      \ updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
    type: "string"
  lifecycle:
    description: "Lifecycle describes actions that the management system should take\
      \ in response to container lifecycle events. For the PostStart and PreStop lifecycle\
      \ handlers, management of the container blocks until the action is complete,\
      \ unless the container process fails, in which case the handler is aborted."
    properties:
      postStart:
        description: "Handler defines a specific action that should be taken"
        properties:
          exec:
            description: "ExecAction describes a \"run in container\" action."
            properties:
              command:
                description: "Command is the command line to execute inside the container,\
                  \ the working directory for the command  is root ('/') in the container's\
                  \ filesystem. The command is simply exec'd, it is not run inside\
                  \ a shell, so traditional shell instructions ('|', etc) won't work.\
                  \ To use a shell, you need to explicitly call out to that shell.\
                  \ Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                items:
                  type: "string"
                type: "array"
            type: "object"
          httpGet:
            description: "HTTPGetAction describes an action based on HTTP Get requests."
            properties:
              host:
                description: "Host name to connect to, defaults to the pod IP. You\
                  \ probably want to set \"Host\" in httpHeaders instead."
                type: "string"
              httpHeaders:
                description: "Custom headers to set in the request. HTTP allows repeated\
                  \ headers."
                items:
                  description: "HTTPHeader describes a custom header to be used in\
                    \ HTTP probes"
                  properties:
                    name:
                      description: "The header field name"
                      type: "string"
                    value:
                      description: "The header field value"
                      type: "string"
                  required:
                  - "name"
                  - "value"
                  type: "object"
                type: "array"
              path:
                description: "Path to access on the HTTP server."
                type: "string"
              port:
                description: "IntOrString is a type that can hold an int32 or a string.\
                  \  When used in JSON or YAML marshalling and unmarshalling, it produces\
                  \ or consumes the inner type.  This allows you to have, for example,\
                  \ a JSON field that can accept a name or number."
                format: "int-or-string"
                type: "string"
                properties: {}
              scheme:
                description: "Scheme to use for connecting to the host. Defaults to\
                  \ HTTP."
                type: "string"
            required:
            - "port"
            type: "object"
          tcpSocket:
            description: "TCPSocketAction describes an action based on opening a socket"
            properties:
              host:
                description: "Optional: Host name to connect to, defaults to the pod\
                  \ IP."
                type: "string"
              port:
                description: "IntOrString is a type that can hold an int32 or a string.\
                  \  When used in JSON or YAML marshalling and unmarshalling, it produces\
                  \ or consumes the inner type.  This allows you to have, for example,\
                  \ a JSON field that can accept a name or number."
                format: "int-or-string"
                type: "string"
                properties: {}
            required:
            - "port"
            type: "object"
        type: "object"
      preStop:
        description: "Handler defines a specific action that should be taken"
        properties:
          exec:
            description: "ExecAction describes a \"run in container\" action."
            properties:
              command:
                description: "Command is the command line to execute inside the container,\
                  \ the working directory for the command  is root ('/') in the container's\
                  \ filesystem. The command is simply exec'd, it is not run inside\
                  \ a shell, so traditional shell instructions ('|', etc) won't work.\
                  \ To use a shell, you need to explicitly call out to that shell.\
                  \ Exit status of 0 is treated as live/healthy and non-zero is unhealthy."
                items:
                  type: "string"
                type: "array"
            type: "object"
          httpGet:
            description: "HTTPGetAction describes an action based on HTTP Get requests."
            properties:
              host:
                description: "Host name to connect to, defaults to the pod IP. You\
                  \ probably want to set \"Host\" in httpHeaders instead."
                type: "string"
              httpHeaders:
                description: "Custom headers to set in the request. HTTP allows repeated\
                  \ headers."
                items:
                  description: "HTTPHeader describes a custom header to be used in\
                    \ HTTP probes"
                  properties:
                    name:
                      description: "The header field name"
                      type: "string"
                    value:
                      description: "The header field value"
                      type: "string"
                  required:
                  - "name"
                  - "value"
                  type: "object"
                type: "array"
              path:
                description: "Path to access on the HTTP server."
                type: "string"
              port:
                description: "IntOrString is a type that can hold an int32 or a string.\
                  \  When used in JSON or YAML marshalling and unmarshalling, it produces\
                  \ or consumes the inner type.  This allows you to have, for example,\
                  \ a JSON field that can accept a name or number."
                format: "int-or-string"
                type: "string"
                properties: {}
              scheme:
                description: "Scheme to use for connecting to the host. Defaults to\
                  \ HTTP."
                type: "string"
            required:
            - "port"
            type: "object"
          tcpSocket:
            description: "TCPSocketAction describes an action based on opening a socket"
            properties:
              host:
                description: "Optional: Host name to connect to, defaults to the pod\
                  \ IP."
                type: "string"
              port:
                description: "IntOrString is a type that can hold an int32 or a string.\
                  \  When used in JSON or YAML marshalling and unmarshalling, it produces\
                  \ or consumes the inner type.  This allows you to have, for example,\
                  \ a JSON field that can accept a name or number."
                format: "int-or-string"
                type: "string"
                properties: {}
            required:
            - "port"
            type: "object"
        type: "object"
    type: "object"
  livenessProbe:
    description: "Probe describes a health check to be performed against a container\
      \ to determine whether it is alive or ready to receive traffic."
    properties:
      exec:
        description: "ExecAction describes a \"run in container\" action."
        properties:
          command:
            description: "Command is the command line to execute inside the container,\
              \ the working directory for the command  is root ('/') in the container's\
              \ filesystem. The command is simply exec'd, it is not run inside a shell,\
              \ so traditional shell instructions ('|', etc) won't work. To use a\
              \ shell, you need to explicitly call out to that shell. Exit status\
              \ of 0 is treated as live/healthy and non-zero is unhealthy."
            items:
              type: "string"
            type: "array"
        type: "object"
      failureThreshold:
        description: "Minimum consecutive failures for the probe to be considered\
          \ failed after having succeeded. Defaults to 3. Minimum value is 1."
        format: "int32"
        type: "integer"
      httpGet:
        description: "HTTPGetAction describes an action based on HTTP Get requests."
        properties:
          host:
            description: "Host name to connect to, defaults to the pod IP. You probably\
              \ want to set \"Host\" in httpHeaders instead."
            type: "string"
          httpHeaders:
            description: "Custom headers to set in the request. HTTP allows repeated\
              \ headers."
            items:
              description: "HTTPHeader describes a custom header to be used in HTTP\
                \ probes"
              properties:
                name:
                  description: "The header field name"
                  type: "string"
                value:
                  description: "The header field value"
                  type: "string"
              required:
              - "name"
              - "value"
              type: "object"
            type: "array"
          path:
            description: "Path to access on the HTTP server."
            type: "string"
          port:
            description: "IntOrString is a type that can hold an int32 or a string.\
              \  When used in JSON or YAML marshalling and unmarshalling, it produces\
              \ or consumes the inner type.  This allows you to have, for example,\
              \ a JSON field that can accept a name or number."
            format: "int-or-string"
            type: "string"
            properties: {}
          scheme:
            description: "Scheme to use for connecting to the host. Defaults to HTTP."
            type: "string"
        required:
        - "port"
        type: "object"
      initialDelaySeconds:
        description: "Number of seconds after the container has started before liveness\
          \ probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
        format: "int32"
        type: "integer"
      periodSeconds:
        description: "How often (in seconds) to perform the probe. Default to 10 seconds.\
          \ Minimum value is 1."
        format: "int32"
        type: "integer"
      successThreshold:
        description: "Minimum consecutive successes for the probe to be considered\
          \ successful after having failed. Defaults to 1. Must be 1 for liveness\
          \ and startup. Minimum value is 1."
        format: "int32"
        type: "integer"
      tcpSocket:
        description: "TCPSocketAction describes an action based on opening a socket"
        properties:
          host:
            description: "Optional: Host name to connect to, defaults to the pod IP."
            type: "string"
          port:
            description: "IntOrString is a type that can hold an int32 or a string.\
              \  When used in JSON or YAML marshalling and unmarshalling, it produces\
              \ or consumes the inner type.  This allows you to have, for example,\
              \ a JSON field that can accept a name or number."
            format: "int-or-string"
            type: "string"
            properties: {}
        required:
        - "port"
        type: "object"
      timeoutSeconds:
        description: "Number of seconds after which the probe times out. Defaults\
          \ to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
        format: "int32"
        type: "integer"
    type: "object"
  name:
    description: "Name of the container specified as a DNS_LABEL. Each container in\
      \ a pod must have a unique name (DNS_LABEL). Cannot be updated."
    type: "string"
  ports:
    description: "List of ports to expose from the container. Exposing a port here\
      \ gives the system additional information about the network connections a container\
      \ uses, but is primarily informational. Not specifying a port here DOES NOT\
      \ prevent that port from being exposed. Any port which is listening on the default\
      \ \"0.0.0.0\" address inside a container will be accessible from the network.\
      \ Cannot be updated."
    items:
      description: "ContainerPort represents a network port in a single container."
      properties:
        containerPort:
          description: "Number of port to expose on the pod's IP address. This must\
            \ be a valid port number, 0 < x < 65536."
          format: "int32"
          type: "integer"
        hostIP:
          description: "What host IP to bind the external port to."
          type: "string"
        hostPort:
          description: "Number of port to expose on the host. If specified, this must\
            \ be a valid port number, 0 < x < 65536. If HostNetwork is specified,\
            \ this must match ContainerPort. Most containers do not need this."
          format: "int32"
          type: "integer"
        name:
          description: "If specified, this must be an IANA_SVC_NAME and unique within\
            \ the pod. Each named port in a pod must have a unique name. Name for\
            \ the port that can be referred to by services."
          type: "string"
        protocol:
          description: "Protocol for port. Must be UDP, TCP, or SCTP. Defaults to\
            \ \"TCP\"."
          type: "string"
      required:
      - "containerPort"
      type: "object"
    type: "array"
    x-kubernetes-list-map-keys:
    - "containerPort"
    - "protocol"
    x-kubernetes-list-type: "map"
    x-kubernetes-patch-merge-key: "containerPort"
    x-kubernetes-patch-strategy: "merge"
  readinessProbe:
    description: "Probe describes a health check to be performed against a container\
      \ to determine whether it is alive or ready to receive traffic."
    properties:
      exec:
        description: "ExecAction describes a \"run in container\" action."
        properties:
          command:
            description: "Command is the command line to execute inside the container,\
              \ the working directory for the command  is root ('/') in the container's\
              \ filesystem. The command is simply exec'd, it is not run inside a shell,\
              \ so traditional shell instructions ('|', etc) won't work. To use a\
              \ shell, you need to explicitly call out to that shell. Exit status\
              \ of 0 is treated as live/healthy and non-zero is unhealthy."
            items:
              type: "string"
            type: "array"
        type: "object"
      failureThreshold:
        description: "Minimum consecutive failures for the probe to be considered\
          \ failed after having succeeded. Defaults to 3. Minimum value is 1."
        format: "int32"
        type: "integer"
      httpGet:
        description: "HTTPGetAction describes an action based on HTTP Get requests."
        properties:
          host:
            description: "Host name to connect to, defaults to the pod IP. You probably\
              \ want to set \"Host\" in httpHeaders instead."
            type: "string"
          httpHeaders:
            description: "Custom headers to set in the request. HTTP allows repeated\
              \ headers."
            items:
              description: "HTTPHeader describes a custom header to be used in HTTP\
                \ probes"
              properties:
                name:
                  description: "The header field name"
                  type: "string"
                value:
                  description: "The header field value"
                  type: "string"
              required:
              - "name"
              - "value"
              type: "object"
            type: "array"
          path:
            description: "Path to access on the HTTP server."
            type: "string"
          port:
            description: "IntOrString is a type that can hold an int32 or a string.\
              \  When used in JSON or YAML marshalling and unmarshalling, it produces\
              \ or consumes the inner type.  This allows you to have, for example,\
              \ a JSON field that can accept a name or number."
            format: "int-or-string"
            type: "string"
            properties: {}
          scheme:
            description: "Scheme to use for connecting to the host. Defaults to HTTP."
            type: "string"
        required:
        - "port"
        type: "object"
      initialDelaySeconds:
        description: "Number of seconds after the container has started before liveness\
          \ probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
        format: "int32"
        type: "integer"
      periodSeconds:
        description: "How often (in seconds) to perform the probe. Default to 10 seconds.\
          \ Minimum value is 1."
        format: "int32"
        type: "integer"
      successThreshold:
        description: "Minimum consecutive successes for the probe to be considered\
          \ successful after having failed. Defaults to 1. Must be 1 for liveness\
          \ and startup. Minimum value is 1."
        format: "int32"
        type: "integer"
      tcpSocket:
        description: "TCPSocketAction describes an action based on opening a socket"
        properties:
          host:
            description: "Optional: Host name to connect to, defaults to the pod IP."
            type: "string"
          port:
            description: "IntOrString is a type that can hold an int32 or a string.\
              \  When used in JSON or YAML marshalling and unmarshalling, it produces\
              \ or consumes the inner type.  This allows you to have, for example,\
              \ a JSON field that can accept a name or number."
            format: "int-or-string"
            type: "string"
            properties: {}
        required:
        - "port"
        type: "object"
      timeoutSeconds:
        description: "Number of seconds after which the probe times out. Defaults\
          \ to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
        format: "int32"
        type: "integer"
    type: "object"
  resources:
    description: "ResourceRequirements describes the compute resource requirements."
    properties:
      limits:
        additionalProperties:
          description: "Quantity is a fixed-point representation of a number. It provides\
            \ convenient marshaling/unmarshaling in JSON and YAML, in addition to\
            \ String() and AsInt64() accessors.\n\nThe serialization format is:\n\n\
            <quantity>        ::= <signedNumber><suffix>\n  (Note that <suffix> may\
            \ be empty, from the \"\" case in <decimalSI>.)\n<digit>           ::=\
            \ 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>\
            \          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>\
            \            ::= \"+\" | \"-\" <signedNumber>    ::= <number> | <sign><number>\
            \ <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>\
            \        ::= Ki | Mi | Gi | Ti | Pi | Ei\n  (International System of units;\
            \ See: http://physics.nist.gov/cuu/Units/binary.html)\n<decimalSI>   \
            \    ::= m | \"\" | k | M | G | T | P | E\n  (Note that 1024 = 1Ki but\
            \ 1000 = 1k; I didn't choose the capitalization.)\n<decimalExponent> ::=\
            \ \"e\" <signedNumber> | \"E\" <signedNumber>\n\nNo matter which of the\
            \ three exponent forms is used, no quantity may represent a number greater\
            \ than 2^63-1 in magnitude, nor may it have more than 3 decimal places.\
            \ Numbers larger or more precise will be capped or rounded up. (E.g.:\
            \ 0.1m will rounded up to 1m.) This may be extended in the future if we\
            \ require larger or smaller quantities.\n\nWhen a Quantity is parsed from\
            \ a string, it will remember the type of suffix it had, and will use the\
            \ same type again when it is serialized.\n\nBefore serializing, Quantity\
            \ will be put in \"canonical form\". This means that Exponent/suffix will\
            \ be adjusted up or down (with a corresponding increase or decrease in\
            \ Mantissa) such that:\n  a. No precision is lost\n  b. No fractional\
            \ digits will be emitted\n  c. The exponent (or suffix) is as large as\
            \ possible.\nThe sign will be omitted unless the number is negative.\n\
            \nExamples:\n  1.5 will be serialized as \"1500m\"\n  1.5Gi will be serialized\
            \ as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented\
            \ by a floating point number. That is the whole point of this exercise.\n\
            \nNon-canonical values will still parse as long as they are well formed,\
            \ but will be re-emitted in their canonical form. (So always use canonical\
            \ form, or don't diff.)\n\nThis format is intended to make it difficult\
            \ to use these numbers without writing some sort of special handling code\
            \ in the hopes that that will cause implementors to also use a fixed point\
            \ implementation."
          type: "string"
          properties: {}
        description: "Limits describes the maximum amount of compute resources allowed.\
          \ More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
        type: "object"
        properties: {}
      requests:
        additionalProperties:
          description: "Quantity is a fixed-point representation of a number. It provides\
            \ convenient marshaling/unmarshaling in JSON and YAML, in addition to\
            \ String() and AsInt64() accessors.\n\nThe serialization format is:\n\n\
            <quantity>        ::= <signedNumber><suffix>\n  (Note that <suffix> may\
            \ be empty, from the \"\" case in <decimalSI>.)\n<digit>           ::=\
            \ 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>\
            \          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>\
            \            ::= \"+\" | \"-\" <signedNumber>    ::= <number> | <sign><number>\
            \ <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>\
            \        ::= Ki | Mi | Gi | Ti | Pi | Ei\n  (International System of units;\
            \ See: http://physics.nist.gov/cuu/Units/binary.html)\n<decimalSI>   \
            \    ::= m | \"\" | k | M | G | T | P | E\n  (Note that 1024 = 1Ki but\
            \ 1000 = 1k; I didn't choose the capitalization.)\n<decimalExponent> ::=\
            \ \"e\" <signedNumber> | \"E\" <signedNumber>\n\nNo matter which of the\
            \ three exponent forms is used, no quantity may represent a number greater\
            \ than 2^63-1 in magnitude, nor may it have more than 3 decimal places.\
            \ Numbers larger or more precise will be capped or rounded up. (E.g.:\
            \ 0.1m will rounded up to 1m.) This may be extended in the future if we\
            \ require larger or smaller quantities.\n\nWhen a Quantity is parsed from\
            \ a string, it will remember the type of suffix it had, and will use the\
            \ same type again when it is serialized.\n\nBefore serializing, Quantity\
            \ will be put in \"canonical form\". This means that Exponent/suffix will\
            \ be adjusted up or down (with a corresponding increase or decrease in\
            \ Mantissa) such that:\n  a. No precision is lost\n  b. No fractional\
            \ digits will be emitted\n  c. The exponent (or suffix) is as large as\
            \ possible.\nThe sign will be omitted unless the number is negative.\n\
            \nExamples:\n  1.5 will be serialized as \"1500m\"\n  1.5Gi will be serialized\
            \ as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented\
            \ by a floating point number. That is the whole point of this exercise.\n\
            \nNon-canonical values will still parse as long as they are well formed,\
            \ but will be re-emitted in their canonical form. (So always use canonical\
            \ form, or don't diff.)\n\nThis format is intended to make it difficult\
            \ to use these numbers without writing some sort of special handling code\
            \ in the hopes that that will cause implementors to also use a fixed point\
            \ implementation."
          type: "string"
          properties: {}
        description: "Requests describes the minimum amount of compute resources required.\
          \ If Requests is omitted for a container, it defaults to Limits if that\
          \ is explicitly specified, otherwise to an implementation-defined value.\
          \ More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
        type: "object"
        properties: {}
    type: "object"
  securityContext:
    description: "SecurityContext holds security configuration that will be applied\
      \ to a container. Some fields are present in both SecurityContext and PodSecurityContext.\
      \  When both are set, the values in SecurityContext take precedence."
    properties:
      allowPrivilegeEscalation:
        description: "AllowPrivilegeEscalation controls whether a process can gain\
          \ more privileges than its parent process. This bool directly controls if\
          \ the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation\
          \ is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN"
        type: "boolean"
      capabilities:
        description: "Adds and removes POSIX capabilities from running containers."
        properties:
          add:
            description: "Added capabilities"
            items:
              type: "string"
            type: "array"
          drop:
            description: "Removed capabilities"
            items:
              type: "string"
            type: "array"
        type: "object"
      privileged:
        description: "Run container in privileged mode. Processes in privileged containers\
          \ are essentially equivalent to root on the host. Defaults to false."
        type: "boolean"
      procMount:
        description: "procMount denotes the type of proc mount to use for the containers.\
          \ The default is DefaultProcMount which uses the container runtime defaults\
          \ for readonly paths and masked paths. This requires the ProcMountType feature\
          \ flag to be enabled."
        type: "string"
      readOnlyRootFilesystem:
        description: "Whether this container has a read-only root filesystem. Default\
          \ is false."
        type: "boolean"
      runAsGroup:
        description: "The GID to run the entrypoint of the container process. Uses\
          \ runtime default if unset. May also be set in PodSecurityContext.  If set\
          \ in both SecurityContext and PodSecurityContext, the value specified in\
          \ SecurityContext takes precedence."
        format: "int64"
        type: "integer"
      runAsNonRoot:
        description: "Indicates that the container must run as a non-root user. If\
          \ true, the Kubelet will validate the image at runtime to ensure that it\
          \ does not run as UID 0 (root) and fail to start the container if it does.\
          \ If unset or false, no such validation will be performed. May also be set\
          \ in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext,\
          \ the value specified in SecurityContext takes precedence."
        type: "boolean"
      runAsUser:
        description: "The UID to run the entrypoint of the container process. Defaults\
          \ to user specified in image metadata if unspecified. May also be set in\
          \ PodSecurityContext.  If set in both SecurityContext and PodSecurityContext,\
          \ the value specified in SecurityContext takes precedence."
        format: "int64"
        type: "integer"
      seLinuxOptions:
        description: "SELinuxOptions are the labels to be applied to the container"
        properties:
          level:
            description: "Level is SELinux level label that applies to the container."
            type: "string"
          role:
            description: "Role is a SELinux role label that applies to the container."
            type: "string"
          type:
            description: "Type is a SELinux type label that applies to the container."
            type: "string"
          user:
            description: "User is a SELinux user label that applies to the container."
            type: "string"
        type: "object"
      windowsOptions:
        description: "WindowsSecurityContextOptions contain Windows-specific options\
          \ and credentials."
        properties:
          gmsaCredentialSpec:
            description: "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)\
              \ inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName\
              \ field."
            type: "string"
          gmsaCredentialSpecName:
            description: "GMSACredentialSpecName is the name of the GMSA credential\
              \ spec to use."
            type: "string"
          runAsUserName:
            description: "The UserName in Windows to run the entrypoint of the container\
              \ process. Defaults to the user specified in image metadata if unspecified.\
              \ May also be set in PodSecurityContext. If set in both SecurityContext\
              \ and PodSecurityContext, the value specified in SecurityContext takes\
              \ precedence."
            type: "string"
        type: "object"
    type: "object"
  startupProbe:
    description: "Probe describes a health check to be performed against a container\
      \ to determine whether it is alive or ready to receive traffic."
    properties:
      exec:
        description: "ExecAction describes a \"run in container\" action."
        properties:
          command:
            description: "Command is the command line to execute inside the container,\
              \ the working directory for the command  is root ('/') in the container's\
              \ filesystem. The command is simply exec'd, it is not run inside a shell,\
              \ so traditional shell instructions ('|', etc) won't work. To use a\
              \ shell, you need to explicitly call out to that shell. Exit status\
              \ of 0 is treated as live/healthy and non-zero is unhealthy."
            items:
              type: "string"
            type: "array"
        type: "object"
      failureThreshold:
        description: "Minimum consecutive failures for the probe to be considered\
          \ failed after having succeeded. Defaults to 3. Minimum value is 1."
        format: "int32"
        type: "integer"
      httpGet:
        description: "HTTPGetAction describes an action based on HTTP Get requests."
        properties:
          host:
            description: "Host name to connect to, defaults to the pod IP. You probably\
              \ want to set \"Host\" in httpHeaders instead."
            type: "string"
          httpHeaders:
            description: "Custom headers to set in the request. HTTP allows repeated\
              \ headers."
            items:
              description: "HTTPHeader describes a custom header to be used in HTTP\
                \ probes"
              properties:
                name:
                  description: "The header field name"
                  type: "string"
                value:
                  description: "The header field value"
                  type: "string"
              required:
              - "name"
              - "value"
              type: "object"
            type: "array"
          path:
            description: "Path to access on the HTTP server."
            type: "string"
          port:
            description: "IntOrString is a type that can hold an int32 or a string.\
              \  When used in JSON or YAML marshalling and unmarshalling, it produces\
              \ or consumes the inner type.  This allows you to have, for example,\
              \ a JSON field that can accept a name or number."
            format: "int-or-string"
            type: "string"
            properties: {}
          scheme:
            description: "Scheme to use for connecting to the host. Defaults to HTTP."
            type: "string"
        required:
        - "port"
        type: "object"
      initialDelaySeconds:
        description: "Number of seconds after the container has started before liveness\
          \ probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
        format: "int32"
        type: "integer"
      periodSeconds:
        description: "How often (in seconds) to perform the probe. Default to 10 seconds.\
          \ Minimum value is 1."
        format: "int32"
        type: "integer"
      successThreshold:
        description: "Minimum consecutive successes for the probe to be considered\
          \ successful after having failed. Defaults to 1. Must be 1 for liveness\
          \ and startup. Minimum value is 1."
        format: "int32"
        type: "integer"
      tcpSocket:
        description: "TCPSocketAction describes an action based on opening a socket"
        properties:
          host:
            description: "Optional: Host name to connect to, defaults to the pod IP."
            type: "string"
          port:
            description: "IntOrString is a type that can hold an int32 or a string.\
              \  When used in JSON or YAML marshalling and unmarshalling, it produces\
              \ or consumes the inner type.  This allows you to have, for example,\
              \ a JSON field that can accept a name or number."
            format: "int-or-string"
            type: "string"
            properties: {}
        required:
        - "port"
        type: "object"
      timeoutSeconds:
        description: "Number of seconds after which the probe times out. Defaults\
          \ to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
        format: "int32"
        type: "integer"
    type: "object"
  stdin:
    description: "Whether this container should allocate a buffer for stdin in the\
      \ container runtime. If this is not set, reads from stdin in the container will\
      \ always result in EOF. Default is false."
    type: "boolean"
  stdinOnce:
    description: "Whether the container runtime should close the stdin channel after\
      \ it has been opened by a single attach. When stdin is true the stdin stream\
      \ will remain open across multiple attach sessions. If stdinOnce is set to true,\
      \ stdin is opened on container start, is empty until the first client attaches\
      \ to stdin, and then remains open and accepts data until the client disconnects,\
      \ at which time stdin is closed and remains closed until the container is restarted.\
      \ If this flag is false, a container processes that reads from stdin will never\
      \ receive an EOF. Default is false"
    type: "boolean"
  terminationMessagePath:
    description: "Optional: Path at which the file to which the container's termination\
      \ message will be written is mounted into the container's filesystem. Message\
      \ written is intended to be brief final status, such as an assertion failure\
      \ message. Will be truncated by the node if greater than 4096 bytes. The total\
      \ message length across all containers will be limited to 12kb. Defaults to\
      \ /dev/termination-log. Cannot be updated."
    type: "string"
  terminationMessagePolicy:
    description: "Indicate how the termination message should be populated. File will\
      \ use the contents of terminationMessagePath to populate the container status\
      \ message on both success and failure. FallbackToLogsOnError will use the last\
      \ chunk of container log output if the termination message file is empty and\
      \ the container exited with an error. The log output is limited to 2048 bytes\
      \ or 80 lines, whichever is smaller. Defaults to File. Cannot be updated."
    type: "string"
  tty:
    description: "Whether this container should allocate a TTY for itself, also requires\
      \ 'stdin' to be true. Default is false."
    type: "boolean"
  volumeDevices:
    description: "volumeDevices is the list of block devices to be used by the container."
    items:
      description: "volumeDevice describes a mapping of a raw block device within\
        \ a container."
      properties:
        devicePath:
          description: "devicePath is the path inside of the container that the device\
            \ will be mapped to."
          type: "string"
        name:
          description: "name must match the name of a persistentVolumeClaim in the\
            \ pod"
          type: "string"
      required:
      - "name"
      - "devicePath"
      type: "object"
    type: "array"
    x-kubernetes-patch-merge-key: "devicePath"
    x-kubernetes-patch-strategy: "merge"
  volumeMounts:
    description: "Pod volumes to mount into the container's filesystem. Cannot be\
      \ updated."
    items:
      description: "VolumeMount describes a mounting of a Volume within a container."
      properties:
        mountPath:
          description: "Path within the container at which the volume should be mounted.\
            \  Must not contain ':'."
          type: "string"
        mountPropagation:
          description: "mountPropagation determines how mounts are propagated from\
            \ the host to container and the other way around. When not set, MountPropagationNone\
            \ is used. This field is beta in 1.10."
          type: "string"
        name:
          description: "This must match the Name of a Volume."
          type: "string"
        readOnly:
          description: "Mounted read-only if true, read-write otherwise (false or\
            \ unspecified). Defaults to false."
          type: "boolean"
        subPath:
          description: "Path within the volume from which the container's volume should\
            \ be mounted. Defaults to \"\" (volume's root)."
          type: "string"
        subPathExpr:
          description: "Expanded path within the volume from which the container's\
            \ volume should be mounted. Behaves similarly to SubPath but environment\
            \ variable references $(VAR_NAME) are expanded using the container's environment.\
            \ Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually\
            \ exclusive."
          type: "string"
      required:
      - "name"
      - "mountPath"
      type: "object"
    type: "array"
    x-kubernetes-patch-merge-key: "mountPath"
    x-kubernetes-patch-strategy: "merge"
  workingDir:
    description: "Container's working directory. If not specified, the container runtime's\
      \ default will be used, which might be configured in the container image. Cannot\
      \ be updated."
    type: "string"
required:
- "name"
type: "object"
