---
description: "Volume represents a named volume in a pod that may be accessed by any\
  \ container in the pod."
properties:
  awsElasticBlockStore:
    description: "Represents a Persistent Disk resource in AWS.\n\nAn AWS EBS disk\
      \ must exist before mounting to a container. The disk must also be in the same\
      \ AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write\
      \ once. AWS EBS volumes support ownership management and SELinux relabeling."
    properties:
      fsType:
        description: "Filesystem type of the volume that you want to mount. Tip: Ensure\
          \ that the filesystem type is supported by the host operating system. Examples:\
          \ \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\
          \ More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
        type: "string"
      partition:
        description: "The partition in the volume that you want to mount. If omitted,\
          \ the default is to mount by volume name. Examples: For volume /dev/sda1,\
          \ you specify the partition as \"1\". Similarly, the volume partition for\
          \ /dev/sda is \"0\" (or you can leave the property empty)."
        format: "int32"
        type: "integer"
      readOnly:
        description: "Specify \"true\" to force and set the ReadOnly property in VolumeMounts\
          \ to \"true\". If omitted, the default is \"false\". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
        type: "boolean"
      volumeID:
        description: "Unique ID of the persistent disk resource in AWS (Amazon EBS\
          \ volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
        type: "string"
    required:
    - "volumeID"
    type: "object"
  azureDisk:
    description: "AzureDisk represents an Azure Data Disk mount on the host and bind\
      \ mount to the pod."
    properties:
      cachingMode:
        description: "Host Caching mode: None, Read Only, Read Write."
        type: "string"
      diskName:
        description: "The Name of the data disk in the blob storage"
        type: "string"
      diskURI:
        description: "The URI the data disk in the blob storage"
        type: "string"
      fsType:
        description: "Filesystem type to mount. Must be a filesystem type supported\
          \ by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly\
          \ inferred to be \"ext4\" if unspecified."
        type: "string"
      kind:
        description: "Expected values Shared: multiple blob disks per storage account\
          \  Dedicated: single blob disk per storage account  Managed: azure managed\
          \ data disk (only in managed availability set). defaults to shared"
        type: "string"
      readOnly:
        description: "Defaults to false (read/write). ReadOnly here will force the\
          \ ReadOnly setting in VolumeMounts."
        type: "boolean"
    required:
    - "diskName"
    - "diskURI"
    type: "object"
  azureFile:
    description: "AzureFile represents an Azure File Service mount on the host and\
      \ bind mount to the pod."
    properties:
      readOnly:
        description: "Defaults to false (read/write). ReadOnly here will force the\
          \ ReadOnly setting in VolumeMounts."
        type: "boolean"
      secretName:
        description: "the name of secret that contains Azure Storage Account Name\
          \ and Key"
        type: "string"
      shareName:
        description: "Share Name"
        type: "string"
    required:
    - "secretName"
    - "shareName"
    type: "object"
  cephfs:
    description: "Represents a Ceph Filesystem mount that lasts the lifetime of a\
      \ pod Cephfs volumes do not support ownership management or SELinux relabeling."
    properties:
      monitors:
        description: "Required: Monitors is a collection of Ceph monitors More info:\
          \ https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
        items:
          type: "string"
        type: "array"
      path:
        description: "Optional: Used as the mounted root, rather than the full Ceph\
          \ tree, default is /"
        type: "string"
      readOnly:
        description: "Optional: Defaults to false (read/write). ReadOnly here will\
          \ force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
        type: "boolean"
      secretFile:
        description: "Optional: SecretFile is the path to key ring for User, default\
          \ is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
        type: "string"
      secretRef:
        description: "LocalObjectReference contains enough information to let you\
          \ locate the referenced object inside the same namespace."
        properties:
          name:
            description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
            type: "string"
        type: "object"
      user:
        description: "Optional: User is the rados user name, default is admin More\
          \ info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
        type: "string"
    required:
    - "monitors"
    type: "object"
  cinder:
    description: "Represents a cinder volume resource in Openstack. A Cinder volume\
      \ must exist before mounting to a container. The volume must also be in the\
      \ same region as the kubelet. Cinder volumes support ownership management and\
      \ SELinux relabeling."
    properties:
      fsType:
        description: "Filesystem type to mount. Must be a filesystem type supported\
          \ by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly\
          \ inferred to be \"ext4\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md"
        type: "string"
      readOnly:
        description: "Optional: Defaults to false (read/write). ReadOnly here will\
          \ force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md"
        type: "boolean"
      secretRef:
        description: "LocalObjectReference contains enough information to let you\
          \ locate the referenced object inside the same namespace."
        properties:
          name:
            description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
            type: "string"
        type: "object"
      volumeID:
        description: "volume id used to identify the volume in cinder. More info:\
          \ https://examples.k8s.io/mysql-cinder-pd/README.md"
        type: "string"
    required:
    - "volumeID"
    type: "object"
  configMap:
    description: "Adapts a ConfigMap into a volume.\n\nThe contents of the target\
      \ ConfigMap's Data field will be presented in a volume as files using the keys\
      \ in the Data field as the file names, unless the items element is populated\
      \ with specific mappings of keys to paths. ConfigMap volumes support ownership\
      \ management and SELinux relabeling."
    properties:
      defaultMode:
        description: "Optional: mode bits used to set permissions on created files\
          \ by default. Must be an octal value between 0000 and 0777 or a decimal\
          \ value between 0 and 511. YAML accepts both octal and decimal values, JSON\
          \ requires decimal values for mode bits. Defaults to 0644. Directories within\
          \ the path are not affected by this setting. This might be in conflict with\
          \ other options that affect the file mode, like fsGroup, and the result\
          \ can be other mode bits set."
        format: "int32"
        type: "integer"
      items:
        description: "If unspecified, each key-value pair in the Data field of the\
          \ referenced ConfigMap will be projected into the volume as a file whose\
          \ name is the key and content is the value. If specified, the listed keys\
          \ will be projected into the specified paths, and unlisted keys will not\
          \ be present. If a key is specified which is not present in the ConfigMap,\
          \ the volume setup will error unless it is marked optional. Paths must be\
          \ relative and may not contain the '..' path or start with '..'."
        items:
          description: "Maps a string key to a path within a volume."
          properties:
            key:
              description: "The key to project."
              type: "string"
            mode:
              description: "Optional: mode bits used to set permissions on this file.\
                \ Must be an octal value between 0000 and 0777 or a decimal value\
                \ between 0 and 511. YAML accepts both octal and decimal values, JSON\
                \ requires decimal values for mode bits. If not specified, the volume\
                \ defaultMode will be used. This might be in conflict with other options\
                \ that affect the file mode, like fsGroup, and the result can be other\
                \ mode bits set."
              format: "int32"
              type: "integer"
            path:
              description: "The relative path of the file to map the key to. May not\
                \ be an absolute path. May not contain the path element '..'. May\
                \ not start with the string '..'."
              type: "string"
          required:
          - "key"
          - "path"
          type: "object"
        type: "array"
      name:
        description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
        type: "string"
      optional:
        description: "Specify whether the ConfigMap or its keys must be defined"
        type: "boolean"
    type: "object"
  csi:
    description: "Represents a source location of a volume to mount, managed by an\
      \ external CSI driver"
    properties:
      driver:
        description: "Driver is the name of the CSI driver that handles this volume.\
          \ Consult with your admin for the correct name as registered in the cluster."
        type: "string"
      fsType:
        description: "Filesystem type to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If\
          \ not provided, the empty value is passed to the associated CSI driver which\
          \ will determine the default filesystem to apply."
        type: "string"
      nodePublishSecretRef:
        description: "LocalObjectReference contains enough information to let you\
          \ locate the referenced object inside the same namespace."
        properties:
          name:
            description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
            type: "string"
        type: "object"
      readOnly:
        description: "Specifies a read-only configuration for the volume. Defaults\
          \ to false (read/write)."
        type: "boolean"
      volumeAttributes:
        additionalProperties:
          type: "string"
        description: "VolumeAttributes stores driver-specific properties that are\
          \ passed to the CSI driver. Consult your driver's documentation for supported\
          \ values."
        type: "object"
        properties: {}
    required:
    - "driver"
    type: "object"
  downwardAPI:
    description: "DownwardAPIVolumeSource represents a volume containing downward\
      \ API info. Downward API volumes support ownership management and SELinux relabeling."
    properties:
      defaultMode:
        description: "Optional: mode bits to use on created files by default. Must\
          \ be a Optional: mode bits used to set permissions on created files by default.\
          \ Must be an octal value between 0000 and 0777 or a decimal value between\
          \ 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal\
          \ values for mode bits. Defaults to 0644. Directories within the path are\
          \ not affected by this setting. This might be in conflict with other options\
          \ that affect the file mode, like fsGroup, and the result can be other mode\
          \ bits set."
        format: "int32"
        type: "integer"
      items:
        description: "Items is a list of downward API volume file"
        items:
          description: "DownwardAPIVolumeFile represents information to create the\
            \ file containing the pod field"
          properties:
            fieldRef:
              description: "ObjectFieldSelector selects an APIVersioned field of an\
                \ object."
              properties:
                apiVersion:
                  description: "Version of the schema the FieldPath is written in\
                    \ terms of, defaults to \"v1\"."
                  type: "string"
                fieldPath:
                  description: "Path of the field to select in the specified API version."
                  type: "string"
              required:
              - "fieldPath"
              type: "object"
            mode:
              description: "Optional: mode bits used to set permissions on this file,\
                \ must be an octal value between 0000 and 0777 or a decimal value\
                \ between 0 and 511. YAML accepts both octal and decimal values, JSON\
                \ requires decimal values for mode bits. If not specified, the volume\
                \ defaultMode will be used. This might be in conflict with other options\
                \ that affect the file mode, like fsGroup, and the result can be other\
                \ mode bits set."
              format: "int32"
              type: "integer"
            path:
              description: "Required: Path is  the relative path name of the file\
                \ to be created. Must not be absolute or contain the '..' path. Must\
                \ be utf-8 encoded. The first item of the relative path must not start\
                \ with '..'"
              type: "string"
            resourceFieldRef:
              description: "ResourceFieldSelector represents container resources (cpu,\
                \ memory) and their output format"
              properties:
                containerName:
                  description: "Container name: required for volumes, optional for\
                    \ env vars"
                  type: "string"
                divisor:
                  description: "Quantity is a fixed-point representation of a number.\
                    \ It provides convenient marshaling/unmarshaling in JSON and YAML,\
                    \ in addition to String() and AsInt64() accessors.\n\nThe serialization\
                    \ format is:\n\n<quantity>        ::= <signedNumber><suffix>\n\
                    \  (Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n\
                    <digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit>\
                    \ | <digit><digits> <number>          ::= <digits> | <digits>.<digits>\
                    \ | <digits>. | .<digits> <sign>            ::= \"+\" | \"-\"\
                    \ <signedNumber>    ::= <number> | <sign><number> <suffix>   \
                    \       ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>\
                    \        ::= Ki | Mi | Gi | Ti | Pi | Ei\n  (International System\
                    \ of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\
                    <decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n  (Note\
                    \ that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n\
                    <decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>\n\
                    \nNo matter which of the three exponent forms is used, no quantity\
                    \ may represent a number greater than 2^63-1 in magnitude, nor\
                    \ may it have more than 3 decimal places. Numbers larger or more\
                    \ precise will be capped or rounded up. (E.g.: 0.1m will rounded\
                    \ up to 1m.) This may be extended in the future if we require\
                    \ larger or smaller quantities.\n\nWhen a Quantity is parsed from\
                    \ a string, it will remember the type of suffix it had, and will\
                    \ use the same type again when it is serialized.\n\nBefore serializing,\
                    \ Quantity will be put in \"canonical form\". This means that\
                    \ Exponent/suffix will be adjusted up or down (with a corresponding\
                    \ increase or decrease in Mantissa) such that:\n  a. No precision\
                    \ is lost\n  b. No fractional digits will be emitted\n  c. The\
                    \ exponent (or suffix) is as large as possible.\nThe sign will\
                    \ be omitted unless the number is negative.\n\nExamples:\n  1.5\
                    \ will be serialized as \"1500m\"\n  1.5Gi will be serialized\
                    \ as \"1536Mi\"\n\nNote that the quantity will NEVER be internally\
                    \ represented by a floating point number. That is the whole point\
                    \ of this exercise.\n\nNon-canonical values will still parse as\
                    \ long as they are well formed, but will be re-emitted in their\
                    \ canonical form. (So always use canonical form, or don't diff.)\n\
                    \nThis format is intended to make it difficult to use these numbers\
                    \ without writing some sort of special handling code in the hopes\
                    \ that that will cause implementors to also use a fixed point\
                    \ implementation."
                  type: "string"
                  properties: {}
                resource:
                  description: "Required: resource to select"
                  type: "string"
              required:
              - "resource"
              type: "object"
          required:
          - "path"
          type: "object"
        type: "array"
    type: "object"
  emptyDir:
    description: "Represents an empty directory for a pod. Empty directory volumes\
      \ support ownership management and SELinux relabeling."
    properties:
      medium:
        description: "What type of storage medium should back this directory. The\
          \ default is \"\" which means to use the node's default medium. Must be\
          \ an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
        type: "string"
      sizeLimit:
        description: "Quantity is a fixed-point representation of a number. It provides\
          \ convenient marshaling/unmarshaling in JSON and YAML, in addition to String()\
          \ and AsInt64() accessors.\n\nThe serialization format is:\n\n<quantity>\
          \        ::= <signedNumber><suffix>\n  (Note that <suffix> may be empty,\
          \ from the \"\" case in <decimalSI>.)\n<digit>           ::= 0 | 1 | ...\
          \ | 9 <digits>          ::= <digit> | <digit><digits> <number>         \
          \ ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>      \
          \      ::= \"+\" | \"-\" <signedNumber>    ::= <number> | <sign><number>\
          \ <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>\
          \        ::= Ki | Mi | Gi | Ti | Pi | Ei\n  (International System of units;\
          \ See: http://physics.nist.gov/cuu/Units/binary.html)\n<decimalSI>     \
          \  ::= m | \"\" | k | M | G | T | P | E\n  (Note that 1024 = 1Ki but 1000\
          \ = 1k; I didn't choose the capitalization.)\n<decimalExponent> ::= \"e\"\
          \ <signedNumber> | \"E\" <signedNumber>\n\nNo matter which of the three\
          \ exponent forms is used, no quantity may represent a number greater than\
          \ 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers\
          \ larger or more precise will be capped or rounded up. (E.g.: 0.1m will\
          \ rounded up to 1m.) This may be extended in the future if we require larger\
          \ or smaller quantities.\n\nWhen a Quantity is parsed from a string, it\
          \ will remember the type of suffix it had, and will use the same type again\
          \ when it is serialized.\n\nBefore serializing, Quantity will be put in\
          \ \"canonical form\". This means that Exponent/suffix will be adjusted up\
          \ or down (with a corresponding increase or decrease in Mantissa) such that:\n\
          \  a. No precision is lost\n  b. No fractional digits will be emitted\n\
          \  c. The exponent (or suffix) is as large as possible.\nThe sign will be\
          \ omitted unless the number is negative.\n\nExamples:\n  1.5 will be serialized\
          \ as \"1500m\"\n  1.5Gi will be serialized as \"1536Mi\"\n\nNote that the\
          \ quantity will NEVER be internally represented by a floating point number.\
          \ That is the whole point of this exercise.\n\nNon-canonical values will\
          \ still parse as long as they are well formed, but will be re-emitted in\
          \ their canonical form. (So always use canonical form, or don't diff.)\n\
          \nThis format is intended to make it difficult to use these numbers without\
          \ writing some sort of special handling code in the hopes that that will\
          \ cause implementors to also use a fixed point implementation."
        type: "string"
        properties: {}
    type: "object"
  fc:
    description: "Represents a Fibre Channel volume. Fibre Channel volumes can only\
      \ be mounted as read/write once. Fibre Channel volumes support ownership management\
      \ and SELinux relabeling."
    properties:
      fsType:
        description: "Filesystem type to mount. Must be a filesystem type supported\
          \ by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly\
          \ inferred to be \"ext4\" if unspecified."
        type: "string"
      lun:
        description: "Optional: FC target lun number"
        format: "int32"
        type: "integer"
      readOnly:
        description: "Optional: Defaults to false (read/write). ReadOnly here will\
          \ force the ReadOnly setting in VolumeMounts."
        type: "boolean"
      targetWWNs:
        description: "Optional: FC target worldwide names (WWNs)"
        items:
          type: "string"
        type: "array"
      wwids:
        description: "Optional: FC volume world wide identifiers (wwids) Either wwids\
          \ or combination of targetWWNs and lun must be set, but not both simultaneously."
        items:
          type: "string"
        type: "array"
    type: "object"
  flexVolume:
    description: "FlexVolume represents a generic volume resource that is provisioned/attached\
      \ using an exec based plugin."
    properties:
      driver:
        description: "Driver is the name of the driver to use for this volume."
        type: "string"
      fsType:
        description: "Filesystem type to mount. Must be a filesystem type supported\
          \ by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default\
          \ filesystem depends on FlexVolume script."
        type: "string"
      options:
        additionalProperties:
          type: "string"
        description: "Optional: Extra command options if any."
        type: "object"
        properties: {}
      readOnly:
        description: "Optional: Defaults to false (read/write). ReadOnly here will\
          \ force the ReadOnly setting in VolumeMounts."
        type: "boolean"
      secretRef:
        description: "LocalObjectReference contains enough information to let you\
          \ locate the referenced object inside the same namespace."
        properties:
          name:
            description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
            type: "string"
        type: "object"
    required:
    - "driver"
    type: "object"
  flocker:
    description: "Represents a Flocker volume mounted by the Flocker agent. One and\
      \ only one of datasetName and datasetUUID should be set. Flocker volumes do\
      \ not support ownership management or SELinux relabeling."
    properties:
      datasetName:
        description: "Name of the dataset stored as metadata -> name on the dataset\
          \ for Flocker should be considered as deprecated"
        type: "string"
      datasetUUID:
        description: "UUID of the dataset. This is unique identifier of a Flocker\
          \ dataset"
        type: "string"
    type: "object"
  gcePersistentDisk:
    description: "Represents a Persistent Disk resource in Google Compute Engine.\n\
      \nA GCE PD must exist before mounting to a container. The disk must also be\
      \ in the same GCE project and zone as the kubelet. A GCE PD can only be mounted\
      \ as read/write once or read-only many times. GCE PDs support ownership management\
      \ and SELinux relabeling."
    properties:
      fsType:
        description: "Filesystem type of the volume that you want to mount. Tip: Ensure\
          \ that the filesystem type is supported by the host operating system. Examples:\
          \ \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\
          \ More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
        type: "string"
      partition:
        description: "The partition in the volume that you want to mount. If omitted,\
          \ the default is to mount by volume name. Examples: For volume /dev/sda1,\
          \ you specify the partition as \"1\". Similarly, the volume partition for\
          \ /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
        format: "int32"
        type: "integer"
      pdName:
        description: "Unique name of the PD resource in GCE. Used to identify the\
          \ disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
        type: "string"
      readOnly:
        description: "ReadOnly here will force the ReadOnly setting in VolumeMounts.\
          \ Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
        type: "boolean"
    required:
    - "pdName"
    type: "object"
  gitRepo:
    description: "Represents a volume that is populated with the contents of a git\
      \ repository. Git repo volumes do not support ownership management. Git repo\
      \ volumes support SELinux relabeling.\n\nDEPRECATED: GitRepo is deprecated.\
      \ To provision a container with a git repo, mount an EmptyDir into an InitContainer\
      \ that clones the repo using git, then mount the EmptyDir into the Pod's container."
    properties:
      directory:
        description: "Target directory name. Must not contain or start with '..'.\
          \  If '.' is supplied, the volume directory will be the git repository.\
          \  Otherwise, if specified, the volume will contain the git repository in\
          \ the subdirectory with the given name."
        type: "string"
      repository:
        description: "Repository URL"
        type: "string"
      revision:
        description: "Commit hash for the specified revision."
        type: "string"
    required:
    - "repository"
    type: "object"
  glusterfs:
    description: "Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs\
      \ volumes do not support ownership management or SELinux relabeling."
    properties:
      endpoints:
        description: "EndpointsName is the endpoint name that details Glusterfs topology.\
          \ More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
        type: "string"
      path:
        description: "Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
        type: "string"
      readOnly:
        description: "ReadOnly here will force the Glusterfs volume to be mounted\
          \ with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
        type: "boolean"
    required:
    - "endpoints"
    - "path"
    type: "object"
  hostPath:
    description: "Represents a host path mapped into a pod. Host path volumes do not\
      \ support ownership management or SELinux relabeling."
    properties:
      path:
        description: "Path of the directory on the host. If the path is a symlink,\
          \ it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
        type: "string"
      type:
        description: "Type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
        type: "string"
    required:
    - "path"
    type: "object"
  iscsi:
    description: "Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write\
      \ once. ISCSI volumes support ownership management and SELinux relabeling."
    properties:
      chapAuthDiscovery:
        description: "whether support iSCSI Discovery CHAP authentication"
        type: "boolean"
      chapAuthSession:
        description: "whether support iSCSI Session CHAP authentication"
        type: "boolean"
      fsType:
        description: "Filesystem type of the volume that you want to mount. Tip: Ensure\
          \ that the filesystem type is supported by the host operating system. Examples:\
          \ \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\
          \ More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi"
        type: "string"
      initiatorName:
        description: "Custom iSCSI Initiator Name. If initiatorName is specified with\
          \ iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume\
          \ name> will be created for the connection."
        type: "string"
      iqn:
        description: "Target iSCSI Qualified Name."
        type: "string"
      iscsiInterface:
        description: "iSCSI Interface Name that uses an iSCSI transport. Defaults\
          \ to 'default' (tcp)."
        type: "string"
      lun:
        description: "iSCSI Target Lun number."
        format: "int32"
        type: "integer"
      portals:
        description: "iSCSI Target Portal List. The portal is either an IP or ip_addr:port\
          \ if the port is other than default (typically TCP ports 860 and 3260)."
        items:
          type: "string"
        type: "array"
      readOnly:
        description: "ReadOnly here will force the ReadOnly setting in VolumeMounts.\
          \ Defaults to false."
        type: "boolean"
      secretRef:
        description: "LocalObjectReference contains enough information to let you\
          \ locate the referenced object inside the same namespace."
        properties:
          name:
            description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
            type: "string"
        type: "object"
      targetPortal:
        description: "iSCSI Target Portal. The Portal is either an IP or ip_addr:port\
          \ if the port is other than default (typically TCP ports 860 and 3260)."
        type: "string"
    required:
    - "targetPortal"
    - "iqn"
    - "lun"
    type: "object"
  name:
    description: "Volume's name. Must be a DNS_LABEL and unique within the pod. More\
      \ info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
    type: "string"
  nfs:
    description: "Represents an NFS mount that lasts the lifetime of a pod. NFS volumes\
      \ do not support ownership management or SELinux relabeling."
    properties:
      path:
        description: "Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
        type: "string"
      readOnly:
        description: "ReadOnly here will force the NFS export to be mounted with read-only\
          \ permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
        type: "boolean"
      server:
        description: "Server is the hostname or IP address of the NFS server. More\
          \ info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
        type: "string"
    required:
    - "server"
    - "path"
    type: "object"
  persistentVolumeClaim:
    description: "PersistentVolumeClaimVolumeSource references the user's PVC in the\
      \ same namespace. This volume finds the bound PV and mounts that volume for\
      \ the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around\
      \ another type of volume that is owned by someone else (the system)."
    properties:
      claimName:
        description: "ClaimName is the name of a PersistentVolumeClaim in the same\
          \ namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
        type: "string"
      readOnly:
        description: "Will force the ReadOnly setting in VolumeMounts. Default false."
        type: "boolean"
    required:
    - "claimName"
    type: "object"
  photonPersistentDisk:
    description: "Represents a Photon Controller persistent disk resource."
    properties:
      fsType:
        description: "Filesystem type to mount. Must be a filesystem type supported\
          \ by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly\
          \ inferred to be \"ext4\" if unspecified."
        type: "string"
      pdID:
        description: "ID that identifies Photon Controller persistent disk"
        type: "string"
    required:
    - "pdID"
    type: "object"
  portworxVolume:
    description: "PortworxVolumeSource represents a Portworx volume resource."
    properties:
      fsType:
        description: "FSType represents the filesystem type to mount Must be a filesystem\
          \ type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly\
          \ inferred to be \"ext4\" if unspecified."
        type: "string"
      readOnly:
        description: "Defaults to false (read/write). ReadOnly here will force the\
          \ ReadOnly setting in VolumeMounts."
        type: "boolean"
      volumeID:
        description: "VolumeID uniquely identifies a Portworx volume"
        type: "string"
    required:
    - "volumeID"
    type: "object"
  projected:
    description: "Represents a projected volume source"
    properties:
      defaultMode:
        description: "Mode bits used to set permissions on created files by default.\
          \ Must be an octal value between 0000 and 0777 or a decimal value between\
          \ 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal\
          \ values for mode bits. Directories within the path are not affected by\
          \ this setting. This might be in conflict with other options that affect\
          \ the file mode, like fsGroup, and the result can be other mode bits set."
        format: "int32"
        type: "integer"
      sources:
        description: "list of volume projections"
        items:
          description: "Projection that may be projected along with other supported\
            \ volume types"
          properties:
            configMap:
              description: "Adapts a ConfigMap into a projected volume.\n\nThe contents\
                \ of the target ConfigMap's Data field will be presented in a projected\
                \ volume as files using the keys in the Data field as the file names,\
                \ unless the items element is populated with specific mappings of\
                \ keys to paths. Note that this is identical to a configmap volume\
                \ source without the default mode."
              properties:
                items:
                  description: "If unspecified, each key-value pair in the Data field\
                    \ of the referenced ConfigMap will be projected into the volume\
                    \ as a file whose name is the key and content is the value. If\
                    \ specified, the listed keys will be projected into the specified\
                    \ paths, and unlisted keys will not be present. If a key is specified\
                    \ which is not present in the ConfigMap, the volume setup will\
                    \ error unless it is marked optional. Paths must be relative and\
                    \ may not contain the '..' path or start with '..'."
                  items:
                    description: "Maps a string key to a path within a volume."
                    properties:
                      key:
                        description: "The key to project."
                        type: "string"
                      mode:
                        description: "Optional: mode bits used to set permissions\
                          \ on this file. Must be an octal value between 0000 and\
                          \ 0777 or a decimal value between 0 and 511. YAML accepts\
                          \ both octal and decimal values, JSON requires decimal values\
                          \ for mode bits. If not specified, the volume defaultMode\
                          \ will be used. This might be in conflict with other options\
                          \ that affect the file mode, like fsGroup, and the result\
                          \ can be other mode bits set."
                        format: "int32"
                        type: "integer"
                      path:
                        description: "The relative path of the file to map the key\
                          \ to. May not be an absolute path. May not contain the path\
                          \ element '..'. May not start with the string '..'."
                        type: "string"
                    required:
                    - "key"
                    - "path"
                    type: "object"
                  type: "array"
                name:
                  description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                  type: "string"
                optional:
                  description: "Specify whether the ConfigMap or its keys must be\
                    \ defined"
                  type: "boolean"
              type: "object"
            downwardAPI:
              description: "Represents downward API info for projecting into a projected\
                \ volume. Note that this is identical to a downwardAPI volume source\
                \ without the default mode."
              properties:
                items:
                  description: "Items is a list of DownwardAPIVolume file"
                  items:
                    description: "DownwardAPIVolumeFile represents information to\
                      \ create the file containing the pod field"
                    properties:
                      fieldRef:
                        description: "ObjectFieldSelector selects an APIVersioned\
                          \ field of an object."
                        properties:
                          apiVersion:
                            description: "Version of the schema the FieldPath is written\
                              \ in terms of, defaults to \"v1\"."
                            type: "string"
                          fieldPath:
                            description: "Path of the field to select in the specified\
                              \ API version."
                            type: "string"
                        required:
                        - "fieldPath"
                        type: "object"
                      mode:
                        description: "Optional: mode bits used to set permissions\
                          \ on this file, must be an octal value between 0000 and\
                          \ 0777 or a decimal value between 0 and 511. YAML accepts\
                          \ both octal and decimal values, JSON requires decimal values\
                          \ for mode bits. If not specified, the volume defaultMode\
                          \ will be used. This might be in conflict with other options\
                          \ that affect the file mode, like fsGroup, and the result\
                          \ can be other mode bits set."
                        format: "int32"
                        type: "integer"
                      path:
                        description: "Required: Path is  the relative path name of\
                          \ the file to be created. Must not be absolute or contain\
                          \ the '..' path. Must be utf-8 encoded. The first item of\
                          \ the relative path must not start with '..'"
                        type: "string"
                      resourceFieldRef:
                        description: "ResourceFieldSelector represents container resources\
                          \ (cpu, memory) and their output format"
                        properties:
                          containerName:
                            description: "Container name: required for volumes, optional\
                              \ for env vars"
                            type: "string"
                          divisor:
                            description: "Quantity is a fixed-point representation\
                              \ of a number. It provides convenient marshaling/unmarshaling\
                              \ in JSON and YAML, in addition to String() and AsInt64()\
                              \ accessors.\n\nThe serialization format is:\n\n<quantity>\
                              \        ::= <signedNumber><suffix>\n  (Note that <suffix>\
                              \ may be empty, from the \"\" case in <decimalSI>.)\n\
                              <digit>           ::= 0 | 1 | ... | 9 <digits>     \
                              \     ::= <digit> | <digit><digits> <number>       \
                              \   ::= <digits> | <digits>.<digits> | <digits>. | .<digits>\
                              \ <sign>            ::= \"+\" | \"-\" <signedNumber>\
                              \    ::= <number> | <sign><number> <suffix>        \
                              \  ::= <binarySI> | <decimalExponent> | <decimalSI>\
                              \ <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n\
                              \  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\
                              <decimalSI>       ::= m | \"\" | k | M | G | T | P |\
                              \ E\n  (Note that 1024 = 1Ki but 1000 = 1k; I didn't\
                              \ choose the capitalization.)\n<decimalExponent> ::=\
                              \ \"e\" <signedNumber> | \"E\" <signedNumber>\n\nNo\
                              \ matter which of the three exponent forms is used,\
                              \ no quantity may represent a number greater than 2^63-1\
                              \ in magnitude, nor may it have more than 3 decimal\
                              \ places. Numbers larger or more precise will be capped\
                              \ or rounded up. (E.g.: 0.1m will rounded up to 1m.)\
                              \ This may be extended in the future if we require larger\
                              \ or smaller quantities.\n\nWhen a Quantity is parsed\
                              \ from a string, it will remember the type of suffix\
                              \ it had, and will use the same type again when it is\
                              \ serialized.\n\nBefore serializing, Quantity will be\
                              \ put in \"canonical form\". This means that Exponent/suffix\
                              \ will be adjusted up or down (with a corresponding\
                              \ increase or decrease in Mantissa) such that:\n  a.\
                              \ No precision is lost\n  b. No fractional digits will\
                              \ be emitted\n  c. The exponent (or suffix) is as large\
                              \ as possible.\nThe sign will be omitted unless the\
                              \ number is negative.\n\nExamples:\n  1.5 will be serialized\
                              \ as \"1500m\"\n  1.5Gi will be serialized as \"1536Mi\"\
                              \n\nNote that the quantity will NEVER be internally\
                              \ represented by a floating point number. That is the\
                              \ whole point of this exercise.\n\nNon-canonical values\
                              \ will still parse as long as they are well formed,\
                              \ but will be re-emitted in their canonical form. (So\
                              \ always use canonical form, or don't diff.)\n\nThis\
                              \ format is intended to make it difficult to use these\
                              \ numbers without writing some sort of special handling\
                              \ code in the hopes that that will cause implementors\
                              \ to also use a fixed point implementation."
                            type: "string"
                            properties: {}
                          resource:
                            description: "Required: resource to select"
                            type: "string"
                        required:
                        - "resource"
                        type: "object"
                    required:
                    - "path"
                    type: "object"
                  type: "array"
              type: "object"
            secret:
              description: "Adapts a secret into a projected volume.\n\nThe contents\
                \ of the target Secret's Data field will be presented in a projected\
                \ volume as files using the keys in the Data field as the file names.\
                \ Note that this is identical to a secret volume source without the\
                \ default mode."
              properties:
                items:
                  description: "If unspecified, each key-value pair in the Data field\
                    \ of the referenced Secret will be projected into the volume as\
                    \ a file whose name is the key and content is the value. If specified,\
                    \ the listed keys will be projected into the specified paths,\
                    \ and unlisted keys will not be present. If a key is specified\
                    \ which is not present in the Secret, the volume setup will error\
                    \ unless it is marked optional. Paths must be relative and may\
                    \ not contain the '..' path or start with '..'."
                  items:
                    description: "Maps a string key to a path within a volume."
                    properties:
                      key:
                        description: "The key to project."
                        type: "string"
                      mode:
                        description: "Optional: mode bits used to set permissions\
                          \ on this file. Must be an octal value between 0000 and\
                          \ 0777 or a decimal value between 0 and 511. YAML accepts\
                          \ both octal and decimal values, JSON requires decimal values\
                          \ for mode bits. If not specified, the volume defaultMode\
                          \ will be used. This might be in conflict with other options\
                          \ that affect the file mode, like fsGroup, and the result\
                          \ can be other mode bits set."
                        format: "int32"
                        type: "integer"
                      path:
                        description: "The relative path of the file to map the key\
                          \ to. May not be an absolute path. May not contain the path\
                          \ element '..'. May not start with the string '..'."
                        type: "string"
                    required:
                    - "key"
                    - "path"
                    type: "object"
                  type: "array"
                name:
                  description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                  type: "string"
                optional:
                  description: "Specify whether the Secret or its key must be defined"
                  type: "boolean"
              type: "object"
            serviceAccountToken:
              description: "ServiceAccountTokenProjection represents a projected service\
                \ account token volume. This projection can be used to insert a service\
                \ account token into the pods runtime filesystem for use against APIs\
                \ (Kubernetes API Server or otherwise)."
              properties:
                audience:
                  description: "Audience is the intended audience of the token. A\
                    \ recipient of a token must identify itself with an identifier\
                    \ specified in the audience of the token, and otherwise should\
                    \ reject the token. The audience defaults to the identifier of\
                    \ the apiserver."
                  type: "string"
                expirationSeconds:
                  description: "ExpirationSeconds is the requested duration of validity\
                    \ of the service account token. As the token approaches expiration,\
                    \ the kubelet volume plugin will proactively rotate the service\
                    \ account token. The kubelet will start trying to rotate the token\
                    \ if the token is older than 80 percent of its time to live or\
                    \ if the token is older than 24 hours.Defaults to 1 hour and must\
                    \ be at least 10 minutes."
                  format: "int64"
                  type: "integer"
                path:
                  description: "Path is the path relative to the mount point of the\
                    \ file to project the token into."
                  type: "string"
              required:
              - "path"
              type: "object"
          type: "object"
        type: "array"
    required:
    - "sources"
    type: "object"
  quobyte:
    description: "Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte\
      \ volumes do not support ownership management or SELinux relabeling."
    properties:
      group:
        description: "Group to map volume access to Default is no group"
        type: "string"
      readOnly:
        description: "ReadOnly here will force the Quobyte volume to be mounted with\
          \ read-only permissions. Defaults to false."
        type: "boolean"
      registry:
        description: "Registry represents a single or multiple Quobyte Registry services\
          \ specified as a string as host:port pair (multiple entries are separated\
          \ with commas) which acts as the central registry for volumes"
        type: "string"
      tenant:
        description: "Tenant owning the given Quobyte volume in the Backend Used with\
          \ dynamically provisioned Quobyte volumes, value is set by the plugin"
        type: "string"
      user:
        description: "User to map volume access to Defaults to serivceaccount user"
        type: "string"
      volume:
        description: "Volume is a string that references an already created Quobyte\
          \ volume by name."
        type: "string"
    required:
    - "registry"
    - "volume"
    type: "object"
  rbd:
    description: "Represents a Rados Block Device mount that lasts the lifetime of\
      \ a pod. RBD volumes support ownership management and SELinux relabeling."
    properties:
      fsType:
        description: "Filesystem type of the volume that you want to mount. Tip: Ensure\
          \ that the filesystem type is supported by the host operating system. Examples:\
          \ \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\
          \ More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd"
        type: "string"
      image:
        description: "The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
        type: "string"
      keyring:
        description: "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring.\
          \ More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
        type: "string"
      monitors:
        description: "A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
        items:
          type: "string"
        type: "array"
      pool:
        description: "The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
        type: "string"
      readOnly:
        description: "ReadOnly here will force the ReadOnly setting in VolumeMounts.\
          \ Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
        type: "boolean"
      secretRef:
        description: "LocalObjectReference contains enough information to let you\
          \ locate the referenced object inside the same namespace."
        properties:
          name:
            description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
            type: "string"
        type: "object"
      user:
        description: "The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
        type: "string"
    required:
    - "monitors"
    - "image"
    type: "object"
  scaleIO:
    description: "ScaleIOVolumeSource represents a persistent ScaleIO volume"
    properties:
      fsType:
        description: "Filesystem type to mount. Must be a filesystem type supported\
          \ by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default\
          \ is \"xfs\"."
        type: "string"
      gateway:
        description: "The host address of the ScaleIO API Gateway."
        type: "string"
      protectionDomain:
        description: "The name of the ScaleIO Protection Domain for the configured\
          \ storage."
        type: "string"
      readOnly:
        description: "Defaults to false (read/write). ReadOnly here will force the\
          \ ReadOnly setting in VolumeMounts."
        type: "boolean"
      secretRef:
        description: "LocalObjectReference contains enough information to let you\
          \ locate the referenced object inside the same namespace."
        properties:
          name:
            description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
            type: "string"
        type: "object"
      sslEnabled:
        description: "Flag to enable/disable SSL communication with Gateway, default\
          \ false"
        type: "boolean"
      storageMode:
        description: "Indicates whether the storage for a volume should be ThickProvisioned\
          \ or ThinProvisioned. Default is ThinProvisioned."
        type: "string"
      storagePool:
        description: "The ScaleIO Storage Pool associated with the protection domain."
        type: "string"
      system:
        description: "The name of the storage system as configured in ScaleIO."
        type: "string"
      volumeName:
        description: "The name of a volume already created in the ScaleIO system that\
          \ is associated with this volume source."
        type: "string"
    required:
    - "gateway"
    - "system"
    - "secretRef"
    type: "object"
  secret:
    description: "Adapts a Secret into a volume.\n\nThe contents of the target Secret's\
      \ Data field will be presented in a volume as files using the keys in the Data\
      \ field as the file names. Secret volumes support ownership management and SELinux\
      \ relabeling."
    properties:
      defaultMode:
        description: "Optional: mode bits used to set permissions on created files\
          \ by default. Must be an octal value between 0000 and 0777 or a decimal\
          \ value between 0 and 511. YAML accepts both octal and decimal values, JSON\
          \ requires decimal values for mode bits. Defaults to 0644. Directories within\
          \ the path are not affected by this setting. This might be in conflict with\
          \ other options that affect the file mode, like fsGroup, and the result\
          \ can be other mode bits set."
        format: "int32"
        type: "integer"
      items:
        description: "If unspecified, each key-value pair in the Data field of the\
          \ referenced Secret will be projected into the volume as a file whose name\
          \ is the key and content is the value. If specified, the listed keys will\
          \ be projected into the specified paths, and unlisted keys will not be present.\
          \ If a key is specified which is not present in the Secret, the volume setup\
          \ will error unless it is marked optional. Paths must be relative and may\
          \ not contain the '..' path or start with '..'."
        items:
          description: "Maps a string key to a path within a volume."
          properties:
            key:
              description: "The key to project."
              type: "string"
            mode:
              description: "Optional: mode bits used to set permissions on this file.\
                \ Must be an octal value between 0000 and 0777 or a decimal value\
                \ between 0 and 511. YAML accepts both octal and decimal values, JSON\
                \ requires decimal values for mode bits. If not specified, the volume\
                \ defaultMode will be used. This might be in conflict with other options\
                \ that affect the file mode, like fsGroup, and the result can be other\
                \ mode bits set."
              format: "int32"
              type: "integer"
            path:
              description: "The relative path of the file to map the key to. May not\
                \ be an absolute path. May not contain the path element '..'. May\
                \ not start with the string '..'."
              type: "string"
          required:
          - "key"
          - "path"
          type: "object"
        type: "array"
      optional:
        description: "Specify whether the Secret or its keys must be defined"
        type: "boolean"
      secretName:
        description: "Name of the secret in the pod's namespace to use. More info:\
          \ https://kubernetes.io/docs/concepts/storage/volumes#secret"
        type: "string"
    type: "object"
  storageos:
    description: "Represents a StorageOS persistent volume resource."
    properties:
      fsType:
        description: "Filesystem type to mount. Must be a filesystem type supported\
          \ by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly\
          \ inferred to be \"ext4\" if unspecified."
        type: "string"
      readOnly:
        description: "Defaults to false (read/write). ReadOnly here will force the\
          \ ReadOnly setting in VolumeMounts."
        type: "boolean"
      secretRef:
        description: "LocalObjectReference contains enough information to let you\
          \ locate the referenced object inside the same namespace."
        properties:
          name:
            description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
            type: "string"
        type: "object"
      volumeName:
        description: "VolumeName is the human-readable name of the StorageOS volume.\
          \  Volume names are only unique within a namespace."
        type: "string"
      volumeNamespace:
        description: "VolumeNamespace specifies the scope of the volume within StorageOS.\
          \  If no namespace is specified then the Pod's namespace will be used. \
          \ This allows the Kubernetes name scoping to be mirrored within StorageOS\
          \ for tighter integration. Set VolumeName to any name to override the default\
          \ behaviour. Set to \"default\" if you are not using namespaces within StorageOS.\
          \ Namespaces that do not pre-exist within StorageOS will be created."
        type: "string"
    type: "object"
  vsphereVolume:
    description: "Represents a vSphere volume resource."
    properties:
      fsType:
        description: "Filesystem type to mount. Must be a filesystem type supported\
          \ by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly\
          \ inferred to be \"ext4\" if unspecified."
        type: "string"
      storagePolicyID:
        description: "Storage Policy Based Management (SPBM) profile ID associated\
          \ with the StoragePolicyName."
        type: "string"
      storagePolicyName:
        description: "Storage Policy Based Management (SPBM) profile name."
        type: "string"
      volumePath:
        description: "Path that identifies vSphere volume vmdk"
        type: "string"
    required:
    - "volumePath"
    type: "object"
required:
- "name"
type: "object"
