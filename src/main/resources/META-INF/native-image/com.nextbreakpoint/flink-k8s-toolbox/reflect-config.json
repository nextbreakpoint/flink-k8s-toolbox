[
  {
    "name": "apple.security.AppleProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "byte[]"
  },
  {
    "name": "com.google.gson.internal.LinkedTreeMap",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.common.DeploymentSelector",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "namespace",
        "allowWrite": true
      },
      {
        "name": "deploymentName",
        "allowWrite": true
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.common.ClusterSelector",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "namespace",
        "allowWrite": true
      },
      {
        "name": "clusterName",
        "allowWrite": true
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.common.JobManagerStats",
    "allDeclaredFields": true
  },
  {
    "name": "com.nextbreakpoint.flink.common.JobSelector",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "namespace",
        "allowWrite": true
      },
      {
        "name": "clusterName",
        "allowWrite": true
      },
      {
        "name": "jobName",
        "allowWrite": true
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.common.JobStats",
    "allDeclaredFields": true
  },
  {
    "name": "com.nextbreakpoint.flink.common.Metric",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "id",
        "allowWrite": true
      },
      {
        "name": "value",
        "allowWrite": true
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.common.TaskManagerStats",
    "allDeclaredFields": true
  },
  {
    "name": "com.nextbreakpoint.flink.k8s.controller.core.Result",
    "allDeclaredFields": true
  },
  {
    "name": "com.nextbreakpoint.flink.k8s.controller.core.ResultStatus",
    "fields": [
      {
        "name": "ERROR"
      },
      {
        "name": "OK"
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.k8s.crd.V1BootstrapSpec",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.k8s.crd.V1FlinkCluster",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.k8s.crd.V1FlinkClusterDigest",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.k8s.crd.V1FlinkClusterSpec",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.k8s.crd.V1FlinkClusterStatus",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.k8s.crd.V1FlinkDeployment",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.k8s.crd.V1FlinkDeploymentDigest",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.k8s.crd.V1FlinkDeploymentJobDigest",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.k8s.crd.V1FlinkDeploymentJobSpec",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.k8s.crd.V1FlinkDeploymentSpec",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.k8s.crd.V1FlinkDeploymentStatus",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.k8s.crd.V1FlinkJob",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.k8s.crd.V1FlinkJobDigest",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.k8s.crd.V1FlinkJobSpec",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.k8s.crd.V1FlinkJobStatus",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.k8s.crd.V1JobManagerSpec",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.k8s.crd.V1RuntimeSpec",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.k8s.crd.V1SavepointSpec",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.k8s.crd.V1RestartSpec",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.k8s.crd.V1SupervisorSpec",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.k8s.crd.V1TaskManagerSpec",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.vertex.core.DeploymentCommand",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "selector",
        "allowWrite": true
      },
      {
        "name": "json",
        "allowWrite": true
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.vertex.core.ClusterCommand",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "selector",
        "allowWrite": true
      },
      {
        "name": "json",
        "allowWrite": true
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.vertex.core.JobCommand",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "selector",
        "allowWrite": true
      },
      {
        "name": "json",
        "allowWrite": true
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.GarbageCollectorInfo",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.HardwareDescription",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.AsynchronousOperationResult",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.ClusterOverviewWithVersion",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.IOMetricsInfo",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.JobDetailsInfo",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.JobDetailsInfo$StateEnum$Adapter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.JobDetailsInfoJobPlan",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.JobDetailsInfoJobVertexDetailsInfo",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.JobDetailsInfoJobVertexDetailsInfo$StatusEnum$Adapter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.JobDetailsInfoNode",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.JobIdWithStatus",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.JobIdWithStatus$StatusEnum$Adapter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.JobIdsWithStatusOverview",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.QueueStatus",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.QueueStatus$IdEnum$Adapter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.SavepointTriggerRequestBody",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.TriggerResponse",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.TaskManagerDetailsInfo",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.TaskManagerInfo",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.TaskManagerMetricsInfo",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.TaskManagersInfo",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.JarEntryInfo",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.JarFileInfo",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.JarListInfo",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.JarRunResponseBody",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.JarUploadResponseBody",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flinkclient.model.JarUploadResponseBody$StatusEnum$Adapter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.AESCipher$General",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DHParameters",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.HmacCore$HmacSHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.HmacPKCS12PBESHA1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.PBEKeyFactory$PBEWithMD5AndDES",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.PBEParameters",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.PKCS12PBECipherCore$PBEWithSHA1AndDESede",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.PKCS12PBECipherCore$PBEWithSHA1AndRC2_40",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.TlsKeyMaterialGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.TlsMasterSecretGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.TlsPrfGenerator$V12",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.custom.IntOrString$IntOrStringAdapter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.custom.Quantity$QuantityAdapter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1AWSElasticBlockStoreVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1Affinity",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1AzureDiskVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1AzureFileVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1CSIVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1Capabilities",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1CephFSVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1CinderVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ClientIPConfig",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ConfigMapEnvSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ConfigMapKeySelector",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ConfigMapProjection",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ConfigMapVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1Container",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ContainerPort",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ContainerState",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ContainerStateRunning",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ContainerStateTerminated",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ContainerStateWaiting",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ContainerStatus",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1DeleteOptions",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1Deployment",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1DeploymentCondition",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1DeploymentSpec",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1DeploymentStatus",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1DeploymentStrategy",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1DownwardAPIProjection",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1DownwardAPIVolumeFile",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1DownwardAPIVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1EmptyDirVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1EnvFromSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1EnvVar",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1EnvVarSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1EphemeralContainer",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ExecAction",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1FCVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1FlexVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1FlockerVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1GCEPersistentDiskVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1GitRepoVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1GlusterfsVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1HTTPGetAction",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1HTTPHeader",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1Handler",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1HostAlias",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1HostPathVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ISCSIVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1Job",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1JobCondition",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1JobSpec",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1JobStatus",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1KeyToPath",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1LabelSelector",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1LabelSelectorRequirement",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1Lifecycle",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ListMeta",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1LoadBalancerIngress",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1LoadBalancerStatus",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1LocalObjectReference",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ManagedFieldsEntry",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1NFSVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1NodeAffinity",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1NodeSelector",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1NodeSelectorRequirement",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1NodeSelectorTerm",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ObjectFieldSelector",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ObjectMeta",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1OwnerReference",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1PersistentVolumeClaimVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1PhotonPersistentDiskVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1Pod",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1PodAffinity",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1PodAffinityTerm",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1PodAntiAffinity",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1PodCondition",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1PodDNSConfig",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1PodDNSConfigOption",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1PodIP",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1PodReadinessGate",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1PodSecurityContext",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1PodSpec",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1PodStatus",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1PodTemplateSpec",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1PortworxVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1Preconditions",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1PreferredSchedulingTerm",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1Probe",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ProjectedVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1QuobyteVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1RBDVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ResourceFieldSelector",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ResourceRequirements",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1RollingUpdateDeployment",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1SELinuxOptions",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ScaleIOVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1SecretEnvSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1SecretKeySelector",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1SecretProjection",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1SecretVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1SecurityContext",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1Service",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ServiceAccountTokenProjection",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ServicePort",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ServiceSpec",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1ServiceStatus",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1SessionAffinityConfig",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1Status",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1StatusCause",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1StatusDetails",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1StorageOSVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1Sysctl",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1TCPSocketAction",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1Toleration",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1TopologySpreadConstraint",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1Volume",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1VolumeDevice",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1VolumeMount",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1VolumeProjection",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1VsphereVirtualDiskVolumeSource",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1WeightedPodAffinityTerm",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.openapi.models.V1WindowsSecurityContextOptions",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.kubernetes.client.util.Watch$Response",
    "allDeclaredFields": true
  },
  {
    "name": "io.netty.bootstrap.ServerBootstrap$1"
  },
  {
    "name": "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.buffer.AbstractByteBufAllocator",
    "allDeclaredMethods": true
  },
  {
    "name": "io.netty.buffer.AbstractReferenceCountedByteBuf",
    "fields": [
      {
        "name": "refCnt",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelDuplexHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelHandlerAdapter",
    "methods": [
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelInboundHandlerAdapter",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelInitializer",
    "methods": [
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelOutboundHandlerAdapter",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.CombinedChannelDuplexHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$HeadContext",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.ByteToMessageDecoder",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.MessageToMessageEncoder",
    "methods": [
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.http.HttpObjectDecoder",
    "methods": [
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$TailContext",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.ByteToMessageDecoder",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.MessageToMessageDecoder",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.MessageToMessageEncoder",
    "methods": [
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.dns.DatagramDnsQueryEncoder"
  },
  {
    "name": "io.netty.handler.codec.http.HttpClientCodec"
  },
  {
    "name": "io.netty.handler.ssl.SslHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.stream.ChunkedWriteHandler",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.resolver.dns.DnsNameResolver$1"
  },
  {
    "name": "io.netty.resolver.dns.DnsNameResolver$3"
  },
  {
    "name": "io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.util.ReferenceCountUtil",
    "allDeclaredMethods": true
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
    "fields": [
      {
        "name": "producerLimit",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
    "fields": [
      {
        "name": "consumerIndex",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
    "fields": [
      {
        "name": "producerIndex",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
    "fields": [
      {
        "name": "consumerIndex",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
    "fields": [
      {
        "name": "producerIndex",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
    "fields": [
      {
        "name": "producerLimit",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "io.vertx.core.http.impl.VertxHttpRequestDecoder"
  },
  {
    "name": "io.vertx.core.http.impl.VertxHttpResponseEncoder"
  },
  {
    "name": "io.vertx.core.impl.launcher.commands.BareCommand",
    "allPublicMethods": true
  },
  {
    "name": "io.vertx.core.impl.launcher.commands.ListCommand",
    "allPublicMethods": true
  },
  {
    "name": "io.vertx.core.impl.launcher.commands.RunCommand",
    "allPublicMethods": true
  },
  {
    "name": "io.vertx.core.impl.launcher.commands.StartCommand",
    "allPublicMethods": true
  },
  {
    "name": "io.vertx.core.impl.launcher.commands.StopCommand",
    "allPublicMethods": true
  },
  {
    "name": "io.vertx.core.impl.launcher.commands.VersionCommand",
    "allPublicMethods": true
  },
  {
    "name": "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "deploy",
        "parameterTypes": [
          "java.lang.String",
          "io.vertx.core.Vertx",
          "io.vertx.core.DeploymentOptions",
          "io.vertx.core.Handler"
        ]
      }
    ]
  },
  {
    "name": "io.vertx.core.logging.SLF4JLogDelegateFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.vertx.core.net.impl.ServerChannelLoadBalancer"
  },
  {
    "name": "io.vertx.core.net.impl.SslHandshakeCompletionHandler",
    "methods": [
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.vertx.core.net.impl.ChannelProvider$1",
    "methods": [
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.vertx.core.net.impl.ChannelProvider$2"
  },
  {
    "name": "io.vertx.core.net.impl.VertxHandler",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "java.lang.String"
  },
  {
    "name": "java.lang.String[]"
  },
  {
    "name": "java.lang.Throwable",
    "methods": [
      {
        "name": "addSuppressed",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "java.lang.management.ManagementFactory",
    "methods": [
      {
        "name": "getRuntimeMXBean",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.management.RuntimeMXBean",
    "methods": [
      {
        "name": "getInputArguments",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.AccessibleObject",
    "fields": [
      {
        "name": "override"
      }
    ]
  },
  {
    "name": "java.net.SocketOption"
  },
  {
    "name": "java.net.StandardSocketOptions",
    "fields": [
      {
        "name": "IP_MULTICAST_IF"
      },
      {
        "name": "IP_MULTICAST_LOOP"
      },
      {
        "name": "IP_MULTICAST_TTL"
      }
    ]
  },
  {
    "name": "java.nio.Bits",
    "fields": [
      {
        "name": "UNALIGNED"
      }
    ]
  },
  {
    "name": "java.nio.Buffer",
    "fields": [
      {
        "name": "address",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "java.nio.DirectByteBuffer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "long",
          "int"
        ]
      }
    ]
  },
  {
    "name": "java.nio.channels.NetworkChannel",
    "methods": [
      {
        "name": "getOption",
        "parameterTypes": [
          "java.net.SocketOption"
        ]
      },
      {
        "name": "setOption",
        "parameterTypes": [
          "java.net.SocketOption",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "java.security.AlgorithmParametersSpi"
  },
  {
    "name": "java.security.KeyStoreSpi"
  },
  {
    "name": "java.security.MessageDigestSpi"
  },
  {
    "name": "java.security.SecureRandomParameters"
  },
  {
    "name": "java.security.cert.PKIXRevocationChecker"
  },
  {
    "name": "java.security.interfaces.ECPrivateKey"
  },
  {
    "name": "java.security.interfaces.ECPublicKey"
  },
  {
    "name": "java.security.interfaces.RSAPrivateKey"
  },
  {
    "name": "java.security.interfaces.RSAPublicKey"
  },
  {
    "name": "java.sql.Date"
  },
  {
    "name": "java.sql.Timestamp"
  },
  {
    "name": "java.util.ArrayList",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.Date"
  },
  {
    "name": "java.util.LinkedHashMap",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.Locale",
    "methods": [
      {
        "name": "getUnicodeLocaleType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "javax.net.ssl.SSLParameters",
    "methods": [
      {
        "name": "setApplicationProtocols",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "javax.net.ssl.SSLSocket",
    "methods": [
      {
        "name": "getApplicationProtocol",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "javax.security.auth.x500.X500Principal",
    "fields": [
      {
        "name": "thisX500Name"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "sun.security.x509.X500Name"
        ]
      }
    ]
  },
  {
    "name": "jdk.internal.misc.Unsafe",
    "methods": [
      {
        "name": "getUnsafe",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "kotlin.collections.EmptyList",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "kotlin.jvm.internal.DefaultConstructorMarker"
  },
  {
    "name": "kotlin.reflect.jvm.internal.ReflectionFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.DH$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.DSA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.DSTU4145$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.EC$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.ECGOST$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.EdEC$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.ElGamal$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.GM$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.GOST$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.IES$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.X509$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.edec.SignatureSpi$Ed25519",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.asymmetric.edec.SignatureSpi$Ed448",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Blake2b$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Blake2s$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.DSTU7564$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.GOST3411$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Haraka$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Keccak$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.MD2$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.MD4$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.MD5$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD128$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD160$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD256$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.RIPEMD320$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA1$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA224$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA256$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA3$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA384$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SHA512$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.SM3$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Skein$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Tiger$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.digest.Whirlpool$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.drbg.DRBG$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.keystore.BC$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.keystore.BCFKS$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.keystore.PKCS12$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.AES$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.ARC4$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.ARIA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Blowfish$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.CAST5$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.CAST6$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Camellia$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.ChaCha$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.DES$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.DESede$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.DSTU7624$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.GOST3412_2015$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Grain128$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Grainv1$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.HC128$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.HC256$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.IDEA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Noekeon$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.OpenSSLPBKDF$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF1$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Poly1305$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.RC2$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.RC5$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.RC6$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Rijndael$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SCRYPT$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SEED$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SM4$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Salsa20$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Serpent$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Shacal2$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SipHash$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.SipHash128$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.TEA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.TLSKDF$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Threefish$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Twofish$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.VMPC$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.XTEA$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.bouncycastle.jcajce.provider.symmetric.Zuc$Mappings",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.misc.Unsafe",
    "fields": [
      {
        "name": "theUnsafe"
      }
    ],
    "methods": [
      {
        "name": "allocateInstance",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "copyMemory",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object",
          "long",
          "long"
        ]
      },
      {
        "name": "getAndAddLong",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "long"
        ]
      },
      {
        "name": "getAndSetObject",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object"
        ]
      },
      {
        "name": "invokeCleaner",
        "parameterTypes": [
          "java.nio.ByteBuffer"
        ]
      },
      {
        "name": "objectFieldOffset",
        "parameterTypes": [
          "java.lang.reflect.Field"
        ]
      },
      {
        "name": "putBoolean",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "sun.nio.ch.SelectorImpl",
    "fields": [
      {
        "name": "publicSelectedKeys",
        "allowUnsafeAccess": true
      },
      {
        "name": "selectedKeys",
        "allowUnsafeAccess": true
      }
    ]
  },
  {
    "name": "sun.security.pkcs.SignerInfo[]"
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.DSA$SHA224withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.DSA$SHA256withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.JavaKeyStore$DualFormatJKS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.JavaKeyStore$JKS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.MD5",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.NativePRNG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA224",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA5$SHA384",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA5$SHA512",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.X509Factory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.certpath.PKIXCertPathValidator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSAKeyFactory$Legacy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSAPSSSignature",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA1withRSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA224withRSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA256withRSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.SSLContextImpl"
  },
  {
    "name": "sun.security.ssl.SSLContextImpl$TLSContext",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.util.ObjectIdentifier"
  },
  {
    "name": "sun.security.x509.AuthorityInfoAccessExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.AuthorityKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.BasicConstraintsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CRLDistributionPointsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CertificateExtensions"
  },
  {
    "name": "sun.security.x509.CertificatePoliciesExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.ExtendedKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.IssuerAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.KeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.NetscapeCertTypeExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.PrivateKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.deser.Deserializers[]"
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.Serializers[]"
  },
  {
    "name": "com.nextbreakpoint.flink.common.ScaleClusterOptions",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "taskManagers",
        "allowWrite": true
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.common.ScaleJobOptions",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "parallelism",
        "allowWrite": true
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.common.StartOptions",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "withoutSavepoint",
        "allowWrite": true
      }
    ]
  },
  {
    "name": "com.nextbreakpoint.flink.common.StopOptions",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "withoutSavepoint",
        "allowWrite": true
      }
    ]
  }
]
